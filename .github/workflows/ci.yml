name: StellarBase CI

on:
  push:
    branches:
      - main
      - 'v*.[0-9]'
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        otp: ['23.3']
        elixir: ['1.11', '1.12']
    env:
      MIX_ENV: test
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            coveralls.io:443
            github.com:443
            repo.hex.pm:443
            builds.hex.pm:443

      - name: Checkout Github repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Sets up an Erlang/OTP environment
        uses: erlef/setup-elixir@a6e26b22319003294c58386b6f25edbc7336819a # v1.18.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Set mix file hash
        id: set_vars
        run: |
          mix_hash="${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}"
          echo "::set-output name=mix_hash::$mix_hash"

      - name: Cache dependecies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ steps.set_vars.outputs.mix_hash }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache PLT files
        id: plt-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            _build
            priv/plts
          key: plt-cache-${{ steps.set_vars.outputs.mix_hash }}
          restore-keys: |
            plt-cache-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run credo
        run: mix credo --strict

      - name: Run dialyzer
        run: mix dialyzer --no-check --ignore-exit-status

      - name: Run tests and ExCoveralls
        run: mix coveralls.github --parallel --flagname otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            coveralls.io:443

      - name: Set BUILD_NUMBER for Pull Request event
        if: github.event_name == 'pull_request'
        run: echo "BUILD_NUMBER=${{ github.event.pull_request.head.sha }}-PR-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      - name: Set BUILD_NUMBER for Push event
        if: github.event_name == 'push'
        run: echo "BUILD_NUMBER=${{ github.sha }}" >> $GITHUB_ENV
      - name: Publish Coverage Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
        run: |
          curl -k "https://coveralls.io/webhook" -d "repo_token=$GITHUB_TOKEN&repo_name=$GITHUB_REPOSITORY&payload[build_num]=$BUILD_NUMBER&payload[status]=done"
